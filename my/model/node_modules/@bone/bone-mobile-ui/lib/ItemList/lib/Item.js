'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _ref = [Symbol('react-native-item-list-key'), Symbol('react-native-item-list-index'), Symbol('react-native-item-list-value'), Symbol('react-native-item-list-status')],
    keySymbol = _ref[0],
    indexSymbol = _ref[1],
    valueSymbol = _ref[2],
    statusSymbol = _ref[3];

// 保留 ^1.0.0 版本的接口

var Item = function () {
    function Item(_ref2) {
        var key = _ref2.key,
            index = _ref2.index,
            value = _ref2.value,
            status = _ref2.status;

        _classCallCheck(this, Item);

        this[keySymbol] = key;

        this[indexSymbol] = index;

        this[valueSymbol] = value;

        this[statusSymbol] = status;
    }

    // getters


    _createClass(Item, [{
        key: 'isDisable',


        // boolean funtions
        // 忽略了 disabled 属性，和 ^1.0.0 版本保持一致
        value: function isDisable() {

            return this.status === -1;
        }
    }, {
        key: 'isNormal',
        value: function isNormal() {

            return this.status === 0;
        }
    }, {
        key: 'isHighlight',
        value: function isHighlight() {

            return this.status === 1;
        }

        // action functions
        // 提供通道，直接修改组件内部状态，而不去同步外部状态
        // 接口不太合理，和 ^1.0.0 版本保持一致，但不实现

    }, {
        key: 'disabled',
        value: function disabled() {}
    }, {
        key: 'normal',
        value: function normal() {}
    }, {
        key: 'highlight',
        value: function highlight() {}
    }, {
        key: 'key',
        get: function get() {

            return this[keySymbol];
        }
    }, {
        key: 'index',
        get: function get() {

            return this[indexSymbol];
        }
    }, {
        key: 'value',
        get: function get() {

            return this[valueSymbol];
        }
    }, {
        key: 'status',
        get: function get() {

            return this[statusSymbol];
        }
    }]);

    return Item;
}();

exports.default = Item;