'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./Picker.css');

var _Scroller = require('./Scroller.js');

var _Scroller2 = _interopRequireDefault(_Scroller);

var _PickerBg = require('./PickerBg.js');

var _PickerBg2 = _interopRequireDefault(_PickerBg);

var _SlideUp = require('./SlideUp.js');

var _SlideUp2 = _interopRequireDefault(_SlideUp);

var _reactNative = require('react-native');

var _reactNative2 = _interopRequireDefault(_reactNative);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Picker = function (_React$Component) {
  _inherits(Picker, _React$Component);

  function Picker(props) {
    _classCallCheck(this, Picker);

    var _this = _possibleConstructorReturn(this, (Picker.__proto__ || Object.getPrototypeOf(Picker)).call(this, props));

    _this._renderScrollers.bind(_this);
    _this._onValueChange.bind(_this);

    _this.data = {};

    _this.props.groups.map(function (column, index) {
      _this.data[column.key] = {
        value: column.source[column.idx],
        idx: column.idx
      };
    });

    _this.style = _reactNative.StyleSheet.flatten(_this.props.style);
    _this.style.height = _this.style.height ? _this.style.height + "px" : null;
    return _this;
  }

  _createClass(Picker, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _SlideUp2.default,
        {
          isShown: this.props.shown,
          title: this.props.title,
          onCancel: this.props.onCancel,
          onConfirm: this.props.onConfirm },
        _react2.default.createElement(
          'div',
          { style: { display: 'flex', position: 'relative' } },
          this._renderScrollers(),
          _react2.default.createElement(_PickerBg2.default, { height: this.style.height })
        )
      );
    }
  }, {
    key: '_onValueChange',
    value: function _onValueChange(data) {
      this.props.onValueChange && this.props.onValueChange(data);
    }
  }, {
    key: '_renderScrollers',
    value: function _renderScrollers() {
      var _this2 = this;

      return this.props.groups.map(function (column, index) {
        return _react2.default.createElement(_Scroller2.default, {
          items: column.source,
          key: index,
          align: column.align,
          activeIndex: column.idx,
          unit: column.unit,
          style: _this2.style,
          onItemSelected: function (column, self) {
            return function (idx) {
              if (_this2.data[column.key].value !== column.source[idx]) {
                _this2.data[column.key].value = column.source[idx];
                _this2.data[column.key].idx = idx;
                _this2._onValueChange(_this2.data);
              }
            };
          }(column, _this2) });
      });
    }
  }]);

  return Picker;
}(_react2.default.Component);

exports.default = Picker;


Picker.propTypes = {
  groups: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.shape({
    key: _react2.default.PropTypes.string,
    source: _react2.default.PropTypes.array,
    idx: _react2.default.PropTypes.number,
    unit: _react2.default.PropTypes.string,
    align: _react2.default.PropTypes.string,
    style: _react2.default.PropTypes.object
  })),
  onValueChange: _react2.default.PropTypes.func,
  shown: _react2.default.PropTypes.bool,
  title: _react2.default.PropTypes.string,
  onCancel: _react2.default.PropTypes.func,
  onConfirm: _react2.default.PropTypes.func
};