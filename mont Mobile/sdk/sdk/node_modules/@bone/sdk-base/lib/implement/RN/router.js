"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var bone_mobile_1 = __importDefault(require("@bone/bone-mobile"));
var invariant_1 = __importDefault(require("invariant"));
var bridge_1 = __importDefault(require("./bridge"));
var constants_1 = require("./constants");
function open(schema, options) {
    return new Promise(function (resolve, reject) {
        bridge_1.default.call(constants_1.MODULE_NAME_NATIVE.ROUTER, 'open', [schema, options.params, options], function (err, ret) {
            if (err) {
                reject(err);
            }
            resolve();
        });
    });
}
exports.open = open;
;
function getConfig() {
    return new Promise(function (resolve, reject) {
        var cid = (bone_mobile_1.default.initialProps && bone_mobile_1.default.initialProps.cid) || (bone_mobile_1.default.query && bone_mobile_1.default.query.cid);
        invariant_1.default(cid, 'router.getConfig: no configId found');
        bridge_1.default.call(constants_1.MODULE_NAME_NATIVE.PLUGIN, 'getConfig', [{ cid: cid, }], function (err, ret) {
            if (err) {
                reject(err);
                return;
            }
            if (!ret) {
                reject(new Error('illegal data'));
                return;
            }
            resolve(ret.data);
        });
    });
}
exports.getConfig = getConfig;
;
