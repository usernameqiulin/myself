/**
 * @akModule AKToast
 * @desciption
 * @aliplus.com
 */
'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNative2 = _interopRequireDefault(_reactNative);

var _LocaleProvider = require('../../../LocaleProvider');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RefreshAddOn = (0, _LocaleProvider.connectLocale)(function (_ref) {
    var boneLocale = _ref.boneLocale,
        messageId = _ref.messageId;

    return _react2.default.createElement(
        _reactNative.View,
        { style: { justifyContent: 'center', flex: 1, alignItems: 'center' } },
        _react2.default.createElement(
            _reactNative.Text,
            { style: { color: '#9d9d9d', fontSize: 14, textAlign: 'center', alignItems: 'center', justifyContent: 'center' } },
            boneLocale.formatMessage('ListView', messageId)
        )
    );
});

module.exports = {
    getDefaultRefresh: function getDefaultRefresh(type, BoneRefresh, messageId) {
        return _react2.default.createElement(
            BoneRefresh,
            { cellType: BoneRefresh.Consts.Types[type], style: { width: window.width, height: 50 } },
            _react2.default.createElement(RefreshAddOn, { messageId: messageId })
        );
    },
    getDefault: function getDefault(BoneRefresh) {
        return {
            onClick: function onClick() {},
            headerIdle: this.getDefaultRefresh('HeaderIdle', BoneRefresh, 'iosPullDownRefresh'),
            headerPulling: this.getDefaultRefresh('HeaderPulling', BoneRefresh, 'iosReleaseRefresh'),
            headerRefreshing: this.getDefaultRefresh('HeaderRefreshing', BoneRefresh, 'iosRefreshing'),
            footerIdle: this.getDefaultRefresh('FooterIdle', BoneRefresh, 'iosPullUpRefresh'),
            footerPulling: this.getDefaultRefresh('FooterPulling', BoneRefresh, 'iosReleaseRefresh'),
            footerRefreshing: this.getDefaultRefresh('FooterRefreshing', BoneRefresh, 'iosRefreshing'),
            footerNoMoreData: this.getDefaultRefresh('FooterNoMoreData', BoneRefresh, 'iosNoMoreData')
        };
    },
    getRefresh: function getRefresh(props) {
        var refreshCells = [];
        if (props.onRefresh) {
            refreshCells.push(_react2.default.cloneElement(props.headerIdle, { key: "headerIdle", cellType: 'headerIdle' }));
            refreshCells.push(_react2.default.cloneElement(props.headerPulling, { key: "headerPulling", cellType: 'headerPulling' }));
            refreshCells.push(_react2.default.cloneElement(props.headerRefreshing, { key: "headerRefreshing", cellType: 'headerRefreshing' }));
        }
        if (props.onInfinite) {
            refreshCells.push(_react2.default.cloneElement(props.footerIdle, { key: "footerIdle", cellType: 'footerIdle' }));
            refreshCells.push(_react2.default.cloneElement(props.footerPulling, { key: "footerPulling", cellType: 'footerPulling' }));
            refreshCells.push(_react2.default.cloneElement(props.footerRefreshing, { key: "footerRefreshing", cellType: 'footerRefreshing' }));
            refreshCells.push(_react2.default.cloneElement(props.footerNoMoreData, { key: "footerNoMoreData", cellType: 'footerNoMoreData' }));
        }
        return refreshCells;
    }
};