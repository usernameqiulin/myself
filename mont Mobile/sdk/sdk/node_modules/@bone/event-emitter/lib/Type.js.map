{"version":3,"sources":["../src/Type.js"],"names":["$","undefined","VERSION_MAJOR","VERSION_MINOR","VERSION_PATCH","Type","getVersion","isString","value","isNumber","disableTypesafe","isNaN","isFloat","isInteger","isScalar","isArray","Array","isFunction","isObject","Object","isImage","Image","isElement","HTMLElement","getType","String","prototype","isHex","test","module","exports"],"mappings":"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","file":"Type.js","sourcesContent":["/**\n * Copyright 2012 Martin Gallagher\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\n// use common module export\n(function ($, undefined) {\n  'use strict';\n\n  /**\n   * Style.js major version\n   * @private\n   * @constant\n   * @type {Number}\n   */\n  var VERSION_MAJOR = 1;\n\n  /**\n   * Style.js minor version\n   * @private\n   * @constant\n   * @type {Number}\n   */\n  var VERSION_MINOR = 0;\n\n  /**\n   * Style.js patch version\n   * @private\n   * @constant\n   * @type {Number}\n   */\n  var VERSION_PATCH = 0;\n\n  // Local copy\n  var Type = function () {};\n\n  // Globalisation\n  $.Type = Type;\n\n  /**\n   * Returns version of library\n   * @static\n   * @returns {String}\n   */\n  Type.getVersion = function () {\n    return VERSION_MAJOR + '.' + VERSION_MINOR + '.' + VERSION_PATCH;\n  };\n\n  /**\n   * Checks if value is string type\n   * @static\n   * @param {mixed} value\n   * @returns {Boolean}\n   */\n  Type.isString = function (value) {\n    return typeof value === 'string';\n  };\n\n  /**\n   * Checks if value is number type\n   * @static\n   * @param {mixed} value\n   * @param {Boolean} disableTypesafe If true do numerical comparison using \"==\"\n   * @returns {Boolean}\n   */\n  Type.isNumber = function (value, disableTypesafe) {\n    return typeof value === 'number' || (disableTypesafe === true && !isNaN(value));\n  };\n\n  /**\n   * Checks if value is float type\n   * @static\n   * @param {mixed} value\n   * @param {Boolean} disableTypesafe If true do numerical comparison using \"==\"\n   * @returns {Boolean}\n   */\n  Type.isFloat = function (value, disableTypesafe) {\n    return Type.isNumber(value, disableTypesafe) && value % 1 !== 0;\n  };\n\n  /**\n   * Checks if value is integer type\n   * @static\n   * @param {mixed} value\n   * @param {Boolean} disableTypesafe If true do numerical comparison using \"==\"\n   * @returns {Boolean}\n   */\n  Type.isInteger = function (value, disableTypesafe) {\n    return Type.isNumber(value, disableTypesafe) && value % 1 === 0;\n  };\n\n  /**\n   * Checks if value is scalar value\n   * @static\n   * @param {mixed} value\n   * @returns {Boolean}\n   */\n  Type.isScalar = function (value) {\n    return Type.isString(value) || Type.isNumber(value);\n  };\n\n  /**\n   * Checks if value is array type\n   * @static\n   * @param {mixed} value\n   * @returns {Boolean}\n   */\n  Type.isArray = function (value) {\n    return value instanceof Array;\n  };\n\n  /**\n   * Checks if value is function type\n   * @static\n   * @param {mixed} value\n   * @returns {Boolean}\n   */\n  Type.isFunction = function (value) {\n    return typeof value === 'function';\n  };\n\n  /**\n   * Checks if value is object type\n   * @static\n   * @param {mixed} value\n   * @returns {Boolean}\n   */\n  Type.isObject = function (value) {\n    return value instanceof Object && !Type.isArray(value) && !Type.isFunction(value);\n  };\n\n  /**\n   * Checks if value is Image type\n   * @static\n   * @param {mixed} value\n   * @returns {Boolean}\n   */\n  Type.isImage = function (value) {\n    return value instanceof Image;\n  };\n\n  /**\n   * Checks if value is HTMLElement type\n   * @static\n   * @param {mixed} value\n   * @returns {Boolean}\n   */\n  Type.isElement = function (value) {\n    return value instanceof HTMLElement;\n  };\n\n  /**\n   * Gets the type of a given value\n   * @private\n   * @param {mixed} value\n   * @param {Boolean} disableTypesafe Compare numbers with == if true\n   * @returns {String} Object type\n   */\n  Type.getType = function (value, disableTypesafe) {\n    if (value !== undefined && value !== null) {\n      if (Type.isNumber(value, disableTypesafe)) {\n        return 'number';\n      } else if (Type.isString(value)) {\n        return 'string';\n      } else if (Type.isArray(value)) {\n        return 'array';\n      } else if (Type.isFunction(value)) {\n        return 'function';\n      } else if (typeof value === 'object') {\n        return value.getType() || 'object';\n      }\n    }\n  };\n\n  /**\n   * Check if string is a hexidecimal value\n   * @returns {Boolean}\n   */\n  String.prototype.isHex = function () {\n    return (/^([0-9a-f]+)$/i).test(this);\n  };\n})(module.exports);"]}