{"version":3,"sources":["../src/index.js"],"names":["SYMBOL_CONF","Symbol","SYMBOL_FILTER","LEVEL","DEBUG","INFO","WARN","ERROR","LEVEL2INT","debug","info","warn","error","APPENDER","CONSOLE","console","DEF_CONF","development","level","appender","test","production","CONF","process","env","NODE_ENV","SNCounter","logger","conf","newConf","Object","assign","filter","f","Array","isArray","inst","matches","label","indexOf","length","Error","args","Log","module","message","append","msg","slice","Erro","prefix","logPrefix","unshift","log","opts","time","Date","createTimeString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds"],"mappings":";;;;;;;;;;;;AAAA,IAAMA,cAAcC,OAAO,MAAP,CAApB;AACA,IAAMC,gBAAgBD,OAAO,QAAP,CAAtB;;AAEA,IAAME,QAAQ;AACVC,WAAO,OADG;AAEVC,UAAM,MAFI;AAGVC,UAAM,MAHI;AAIVC,WAAO;AAJG,CAAd;;AAOA,IAAMC,YAAY;AACdC,WAAO,CADO;AAEdC,UAAM,CAFQ;AAGdC,UAAM,CAHQ;AAIdC,WAAO;AAJO,CAAlB;;AAOA,IAAMC,WAAW;AACbC,aAASC;AADI,CAAjB;;AAIA,IAAMC,WAAW;AACbC,iBAAa;AACTC,eAAOf,MAAMC,KADJ;AAETe,kBAAUN,SAASC;AAFV,KADA;;AAMbM,UAAM;AACFF,eAAOf,MAAMG,IADX;AAEFa,kBAAUN,SAASC;AAFjB,KANO;;AAWbO,gBAAY;AACRH,eAAOf,MAAMI,KADL;AAERY,kBAAUN,SAASC;AAFX;AAXC,CAAjB;;AAiBA,IAAMQ,OAAOC,WAAWA,QAAQC,GAAnB,IAA0BD,QAAQC,GAAR,CAAYC,QAAtC,GAAiDT,SAASO,QAAQC,GAAR,CAAYC,QAArB,CAAjD,GAAkFT,SAASK,UAAxG;;AAEA,IAAIK,YAAY,CAAhB;;IAEqBC,M;;;+BA4CHC,I,EAAK;AACf,mBAAO,IAAI,IAAJ,CAASA,IAAT,CAAP;AACH;;;6BAEU;AACP,2BAAa,EAAEF,SAAf;AACH;;;4BAjDgB;AACb,mBAAO,KAAK1B,WAAL,KAAqBsB,IAA5B;AACH,S;0BAEeO,O,EAAQ;AACpB,iBAAK7B,WAAL,IAAoB8B,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAK/B,WAAL,CAAlB,EAAqC6B,OAArC,CAApB;AACH;;;4BAEkB;AACf,mBAAO,KAAK3B,aAAL,KAAuB,YAAU;AACpC;AACA,uBAAO,IAAP;AACH,aAHD;AAIH,S;0BAEiB8B,M,EAAO;AACrB,gBAAIC,IAAID,MAAR;;AAEA,gBAAGE,MAAMC,OAAN,CAAcH,MAAd,CAAH,EAAyB;AACrBC,oBAAI,WAASG,IAAT,EAAc;AACd,wBAAMC,UAAU,CAACD,KAAKE,KAAL,IAAc,EAAf,EAAmBN,MAAnB,CAA0B,UAACM,KAAD,EAAS;AAC/C,+BAAON,OAAOO,OAAP,CAAeD,KAAf,IAAwB,CAAC,CAAhC;AACH,qBAFe,CAAhB;;AAIA,2BAAOD,QAAQG,MAAR,GAAiB,CAAxB;AACH,iBAND;AAOH;;AAED,iBAAKtC,aAAL,IAAsB+B,CAAtB;AACH;;;4BAEiB;AACd,mBAAO9B,KAAP;AACH;;;4BAEoB;AACjB,mBAAOa,QAAP;AACH;;;4BAEoB;AACjB,mBAAOH,QAAP;AACH;;;AAUD,oBAAYe,IAAZ,EAAiB;AAAA;;AACb,YAAG,OAAOA,IAAP,KAAgB,QAAnB,EAA4B;AACxB,kBAAM,IAAIa,KAAJ,CAAU,6BAAV,CAAN;AACH;;AAED,aAAKb,IAAL,GAAYA,IAAZ;AACH;;;;;;AAUD;;;;;4BAKIV,K,EAAe;AAAA,8CAALwB,IAAK;AAALA,oBAAK;AAAA;;AACf,gBAAMN,OAAO,IAAIO,GAAJ,CAAQ;AACjBzB,uBAAOA,KADU;AAEjB0B,wBAAQ,KAAKhB,IAAL,CAAUgB,MAFD;AAGjBC,yBAASH;AAHQ,aAAR,CAAb;;AAMA;AACA,gBAAGlC,UAAUU,KAAV,IAAmBV,UAAUmB,OAAOC,IAAP,CAAYV,KAAtB,CAAtB,EAAmD;AAC/C,uBAAOkB,IAAP;AACH;;AAED;AACA,gBAAG,CAACT,OAAOK,MAAP,CAAcI,IAAd,CAAJ,EAAwB;AACpB,uBAAOA,IAAP;AACH;;AAED,iBAAKU,MAAL,CAAYV,IAAZ;AACA,mBAAOA,IAAP;AACH;;AAED;;;;;;;+BAIOA,I,EAAK;AAAA;;AACR;AACA,gBAAMW,MAAMX,KAAKS,OAAL,CAAaG,KAAb,CAAmB,CAAnB,CAAZ;;AAEA,gBAAG,CAACd,MAAMC,OAAN,CAAcY,GAAd,CAAJ,EAAuB;AACnB,sBAAM,IAAIE,IAAJ,CAAS,8BAAT,CAAN;AACH;;AAED,gBAAMC,SAASC,UAAUf,IAAV,CAAf;;AAEA,gBAAG,OAAOW,IAAI,CAAJ,CAAP,KAAkB,QAArB,EAA8B;AAC1B;AACAA,oBAAI,CAAJ,IAASG,SAASH,IAAI,CAAJ,CAAlB;AACH,aAHD,MAGO;AACH;AACAA,oBAAIK,OAAJ,CAAYF,MAAZ;AACH;;AAED,4CAAOtB,IAAP,CAAYT,QAAZ,EAAqBiB,KAAKlB,KAA1B,kDAAoC6B,GAApC;AACH;;;gCAEa;AAAA,+CAALL,IAAK;AAALA,oBAAK;AAAA;;AACV,mBAAO,KAAKW,GAAL,cAASlD,MAAMC,KAAf,SAAyBsC,IAAzB,EAAP;AACH;;;+BAEY;AAAA,+CAALA,IAAK;AAALA,oBAAK;AAAA;;AACT,mBAAO,KAAKW,GAAL,cAASlD,MAAME,IAAf,SAAwBqC,IAAxB,EAAP;AACH;;;+BAEY;AAAA,+CAALA,IAAK;AAALA,oBAAK;AAAA;;AACT,mBAAO,KAAKW,GAAL,cAASlD,MAAMG,IAAf,SAAwBoC,IAAxB,EAAP;AACH;;;gCAEa;AAAA,+CAALA,IAAK;AAALA,oBAAK;AAAA;;AACV,mBAAO,KAAKW,GAAL,cAASlD,MAAMI,KAAf,SAAyBmC,IAAzB,EAAP;AACH;;;4BAzES;AACN,mBAAO,KAAK1C,WAAL,CAAP;AACH,S;0BAEQ6B,O,EAAQ;AACb,iBAAK7B,WAAL,IAAoB8B,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAK/B,WAAL,CAAlB,EAAqC6B,OAArC,CAApB;AACH;;;;;;kBAlEgBF,M;AAsIpB;;IAEKgB,G,GACF,aAAYW,IAAZ,EAAiB;AAAA;;AACbxB,WAAOC,MAAP,CAAc,IAAd,EAAoBuB,IAApB;;AAEA,SAAKC,IAAL,GAAY,IAAIC,IAAJ,EAAZ;AACH,C;;AAGL,SAASL,SAAT,CAAmBE,GAAnB,EAAuB;AACnB,iBAAWA,IAAIT,MAAf,WAA2Ba,iBAAiBJ,IAAIE,IAArB,CAA3B,WAA2DF,IAAInC,KAA/D;AACH;;AAED,SAASuC,gBAAT,GAA2B;AACvB,QAAIF,OAAO,IAAIC,IAAJ,EAAX;;AAEA;AACA;AACA,WAAU,CAACD,KAAKG,WAAL,KAAqB,EAAtB,EAA0BV,KAA1B,CAAgC,CAAhC,CAAH,UAAyCO,KAAKI,QAAL,KAAgB,CAAzD,UAA8DJ,KAAKK,OAAL,EAA9D,UACAL,KAAKM,QAAL,EADA,SACmBN,KAAKO,UAAL,EADnB,SACwCP,KAAKQ,UAAL,EADxC,SAC6DR,KAAKS,eAAL,EAD7D,CAAP;AAEH","file":"index.js","sourcesContent":["const SYMBOL_CONF = Symbol('conf');\nconst SYMBOL_FILTER = Symbol('filter');\n\nconst LEVEL = {\n    DEBUG: 'debug',\n    INFO: 'info',\n    WARN: 'warn',\n    ERROR: 'error'\n};\n\nconst LEVEL2INT = {\n    debug: 0,\n    info: 1,\n    warn: 2,\n    error: 3\n};\n\nconst APPENDER = {\n    CONSOLE: console\n};\n\nconst DEF_CONF = {\n    development: {\n        level: LEVEL.DEBUG,\n        appender: APPENDER.CONSOLE\n    },\n\n    test: {\n        level: LEVEL.WARN,\n        appender: APPENDER.CONSOLE\n    },\n\n    production: {\n        level: LEVEL.ERROR,\n        appender: APPENDER.CONSOLE\n    }\n};\n\nconst CONF = process && process.env && process.env.NODE_ENV ? DEF_CONF[process.env.NODE_ENV] : DEF_CONF.production;\n\nlet SNCounter = 0;\n\nexport default class logger {\n    static get conf(){\n        return this[SYMBOL_CONF] || CONF;\n    }\n\n    static set conf(newConf){\n        this[SYMBOL_CONF] = Object.assign({}, this[SYMBOL_CONF], newConf);\n    }\n\n    static get filter(){\n        return this[SYMBOL_FILTER] || function(){\n            // always pass by default\n            return true;\n        };\n    }\n\n    static set filter(filter){\n        let f = filter;\n\n        if(Array.isArray(filter)){\n            f = function(inst){\n                const matches = (inst.label || []).filter((label)=>{\n                    return filter.indexOf(label) > -1;\n                });\n\n                return matches.length > 0;\n            }\n        }\n\n        this[SYMBOL_FILTER] = f;\n    }\n\n    static get LEVEL(){\n        return LEVEL;\n    }\n\n    static get DEF_CONF(){\n        return DEF_CONF;\n    }\n\n    static get APPENDER(){\n        return APPENDER;\n    }\n\n    static create(conf){\n        return new this(conf);\n    }\n\n    static sn(){\n        return `sn-${++SNCounter}`;\n    }\n\n    constructor(conf){\n        if(typeof conf !== 'object'){\n            throw new Error('logger: conf must be object');\n        }\n\n        this.conf = conf;\n    }\n\n    get conf(){\n        return this[SYMBOL_CONF];\n    }\n\n    set conf(newConf){\n        this[SYMBOL_CONF] = Object.assign({}, this[SYMBOL_CONF], newConf);\n    }\n\n    /**\n     * @private\n     * @param {enums} level logger.LEVEL\n     * @param {Array} args log arguments\n     */\n    log(level, ...args){\n        const inst = new Log({\n            level: level,\n            module: this.conf.module,\n            message: args\n        });\n\n        // level check\n        if(LEVEL2INT[level] < LEVEL2INT[logger.conf.level]){\n            return inst;\n        }\n\n        // filter check\n        if(!logger.filter(inst)){\n            return inst;\n        }\n        \n        this.append(inst);\n        return inst;\n    }\n\n    /**\n     * @private\n     * @param {Log} inst \n     */\n    append(inst){\n        // copy message array\n        const msg = inst.message.slice(0);\n\n        if(!Array.isArray(msg)){\n            throw new Erro('logger: illegal log messsage');\n        }\n\n        const prefix = logPrefix(inst);\n\n        if(typeof msg[0] === 'string'){\n            // log(msg, subst1, subst2, ...)\n            msg[0] = prefix + msg[0];\n        } else {\n            // obj\n            msg.unshift(prefix);\n        }\n\n        logger.conf.appender[inst.level](...msg);\n    }\n\n    debug(...args){\n        return this.log(LEVEL.DEBUG, ...args);\n    }\n\n    info(...args){\n        return this.log(LEVEL.INFO, ...args);\n    }\n\n    warn(...args){\n        return this.log(LEVEL.WARN, ...args);\n    }\n\n    error(...args){\n        return this.log(LEVEL.ERROR, ...args);\n    }\n};\n\nclass Log {\n    constructor(opts){\n        Object.assign(this, opts);\n\n        this.time = new Date;\n    }\n}\n\nfunction logPrefix(log){\n    return `[${log.module}]:[${createTimeString(log.time)}]:[${log.level}] - `;\n}\n\nfunction createTimeString(){\n    let time = new Date;\n\n    // YY-MM-DD HH:mm:ss.SSS\n    // 17-10-30 15:35:22:123\n    return `${(time.getFullYear() + '').slice(2)}-${time.getMonth()+1}-${time.getDate()} ` +\n        `${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}:${time.getMilliseconds()}`;\n}"]}