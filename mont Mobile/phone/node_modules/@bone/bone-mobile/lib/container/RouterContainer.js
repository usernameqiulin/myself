'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRouterRedux = require('react-router-redux');

var _CachedRoute = require('./CachedRoute');

var _CachedRoute2 = _interopRequireDefault(_CachedRoute);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RouterContainer = function (_React$Component) {
  _inherits(RouterContainer, _React$Component);

  function RouterContainer() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, RouterContainer);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RouterContainer.__proto__ || Object.getPrototypeOf(RouterContainer)).call.apply(_ref, [this].concat(args))), _this), _this.history = _this.props.history, _temp), _possibleConstructorReturn(_this, _ret);
  }
  // static properties


  // history concerned properties and methods


  _createClass(RouterContainer, [{
    key: 'render',


    // store = this.context.store

    // pageMap = {}

    // renderPage(props, route) {
    //   const rpath = route.path;
    //   if (this.pageMap[rpath]) {
    //     return this.pageMap[rpath];
    //   }
    //   props.route = route;
    //   this.pageMap[rpath] = React.createElement(route.layout, props);
    //   return this.pageMap[rpath];
    // }

    value: function render() {
      var _props = this.props,
          routes = _props.routes,
          history = _props.history;

      return _react2.default.createElement(
        _reactRouterRedux.ConnectedRouter,
        { history: history },
        _react2.default.createElement(_CachedRoute2.default, { app: this.props.app, routes: routes })
      );
    }

    // renderRoutes(router, extraProps = {}){
    //   const noMatch = router.noMatch || NoMatchComponent;

    //   return (
    //     <Switch>
    //       {(router.routes || []).map((route, i) => (
    //         <Route
    //           key={route.key || i}
    //           path={route.path}
    //           exact={route.exact}
    //           strict={route.strict}
    //           render={(props) => this.renderPage(props, route)}
    //         />
    //       ))}

    //       <Route
    //           key="404"
    //           component={noMatch}
    //         />
    //     </Switch>
    //   );
    // }

  }]);

  return RouterContainer;
}(_react2.default.Component);

RouterContainer.propTypes = {
  // initialEntries: PropTypes.array,
  // initialIndex: PropTypes.number,
  // getUserConfirmation: PropTypes.func,
  // keyLength: PropTypes.number,
  app: _propTypes2.default.object.isRequired,
  history: _propTypes2.default.object.isRequired,
  routes: _propTypes2.default.arrayOf(_propTypes2.default.object).isRequired
};
RouterContainer.contextTypes = {
  store: _propTypes2.default.object };
exports.default = RouterContainer;