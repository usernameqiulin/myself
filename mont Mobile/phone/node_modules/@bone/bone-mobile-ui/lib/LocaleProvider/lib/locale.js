'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.localeShape = undefined;
exports.default = createLocale;

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _events = require('events');

var _events2 = _interopRequireDefault(_events);

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _util = require('./util');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function createLocale(locale, messages) {
  (0, _invariant2.default)(typeof locale === 'string', 'Expected locale to be a string');
  (0, _invariant2.default)((0, _util.isPlainObject)(messages), 'Expected messages to be a plain object');

  var currentEmitter = new _events2.default();
  currentEmitter.setMaxListeners(Infinity);

  var currentLocale = locale;
  var currentMessages = messages;

  var getMessage = function getMessage() {
    return currentMessages[currentLocale] || {};
  };

  var subscribe = function subscribe(listener) {
    (0, _invariant2.default)(typeof listener === 'function', 'Expected listener to be a function');
    var isSubscribed = true;
    currentEmitter.on('localechange', listener);

    return function unsubscribe() {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;
      currentEmitter.removeListener('localechange', listener);
    };
  };

  var dispatch = function dispatch(action) {
    (0, _invariant2.default)((0, _util.isPlainObject)(action), 'Expected action to be a plain object');

    if ('locale' in action) {
      (0, _invariant2.default)(typeof action.locale === 'string', 'Expected action.locale to be a string');
      currentLocale = action.locale;
    }

    if ('messages' in action) {
      (0, _invariant2.default)((0, _util.isPlainObject)(action.messages), 'Expected action.messages to be a plain object');
      currentMessages = action.messages;
    }

    currentEmitter.emit('localechange');
  };

  return {
    getMessage: getMessage,
    subscribe: subscribe,
    dispatch: dispatch
  };
}

var localeShape = exports.localeShape = _propTypes2.default.shape({
  getMessage: _propTypes2.default.func.isRequired,
  subscribe: _propTypes2.default.func.isRequired
});