'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _immutable = require('immutable');

var _immutable2 = _interopRequireDefault(_immutable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ToastContent = function (_Component) {
    _inherits(ToastContent, _Component);

    function ToastContent() {
        _classCallCheck(this, ToastContent);

        return _possibleConstructorReturn(this, (ToastContent.__proto__ || Object.getPrototypeOf(ToastContent)).apply(this, arguments));
    }

    _createClass(ToastContent, [{
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate(nextProps, nextState) {

            return !_immutable2.default.is(_immutable2.default.fromJS(this.props), _immutable2.default.fromJS(nextProps));
        }
    }, {
        key: 'render',
        value: function render() {
            var text = this.props.text;


            return _react2.default.createElement(
                _reactNative.View,
                { style: styles.body },
                _react2.default.createElement(
                    _reactNative.Text,
                    { style: styles.text },
                    text || ' '
                )
            );
        }
    }]);

    return ToastContent;
}(_react.Component);

ToastContent.propTypes = {
    text: _propTypes2.default.string // 显示文字
};
ToastContent.defaultProps = {
    text: ''
};
exports.default = ToastContent;


var styles = _reactNative.StyleSheet.create({
    body: {
        width: 190,
        paddingTop: 34,
        paddingRight: 20,
        paddingBottom: 34,
        paddingLeft: 20,
        borderRadius: 6,
        backgroundColor: 'rgba(0, 0, 0, 0.8)'
    },
    text: {
        lineHeight: 22,
        fontSize: 16,
        color: '#fff',
        textAlign: 'center'
    }
});