{"version":3,"sources":["../src/index.js"],"names":["logger","SYMBOL_CONF","Symbol","SYMBOL_FILTER","LEVEL","DEBUG","INFO","WARN","ERROR","LEVEL2INT","debug","info","warn","error","APPENDER","CONSOLE","console","DEF_CONF","development","level","appender","test","production","CONF","process","env","NODE_ENV","SNCounter","sn","Logger","conf","Error","args","inst","Log","module","message","filter","append","msg","slice","Array","isArray","Erro","prefix","logPrefix","unshift","log","newConf","Object","assign","opts","time","Date","create","createTimeString","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","options","label","defineProperties","get","set","f","matches","indexOf","length","global","window"],"mappings":"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","file":"index.js","sourcesContent":["const SYMBOL_CONF = Symbol('conf');\nconst SYMBOL_FILTER = Symbol('filter');\n\nconst LEVEL = {\n    DEBUG: 'debug',\n    INFO: 'info',\n    WARN: 'warn',\n    ERROR: 'error'\n};\n\nconst LEVEL2INT = {\n    debug: 0,\n    info: 1,\n    warn: 2,\n    error: 3\n};\n\nconst APPENDER = {\n    CONSOLE: console\n};\n\nconst DEF_CONF = {\n    development: {\n        level: LEVEL.DEBUG,\n        appender: APPENDER.CONSOLE\n    },\n\n    test: {\n        level: LEVEL.WARN,\n        appender: APPENDER.CONSOLE\n    },\n\n    production: {\n        level: LEVEL.ERROR,\n        appender: APPENDER.CONSOLE\n    }\n};\n\nconst CONF = process && process.env && process.env.NODE_ENV ? DEF_CONF[process.env.NODE_ENV] : DEF_CONF.production;\n\nlet SNCounter = 0;\nfunction sn(){\n    return `sn-${++SNCounter}`;\n}\n\nclass Logger {\n    constructor(conf){\n        if(typeof conf !== 'object'){\n            throw new Error('logger: conf must be object');\n        }\n\n        this.conf = conf;\n    }\n\n    get conf(){\n        return this[SYMBOL_CONF];\n    }\n\n    set conf(newConf){\n        this[SYMBOL_CONF] = Object.assign({}, this[SYMBOL_CONF], newConf);\n    }\n\n    /**\n     * @private\n     * @param {enums} level logger.LEVEL\n     * @param {Array} args log arguments\n     */\n    log(level, ...args){\n        const inst = new Log({\n            level: level,\n            module: this.conf.module,\n            message: args\n        });\n\n        // level check\n        if(LEVEL2INT[level] < LEVEL2INT[logger.conf.level]){\n            return inst;\n        }\n\n        // filter check\n        if(!logger.filter(inst)){\n            return inst;\n        }\n        \n        this.append(inst);\n        return inst;\n    }\n\n    /**\n     * @private\n     * @param {Log} inst \n     */\n    append(inst){\n        // copy message array\n        const msg = inst.message.slice(0);\n\n        if(!Array.isArray(msg)){\n            throw new Erro('logger: illegal log messsage');\n        }\n\n        const prefix = logPrefix(inst);\n\n        if(typeof msg[0] === 'string'){\n            // log(msg, subst1, subst2, ...)\n            msg[0] = prefix + msg[0];\n        } else {\n            // obj\n            msg.unshift(prefix);\n        }\n\n        logger.conf.appender[inst.level](...msg);\n    }\n\n    debug(...args){\n        return this.log(LEVEL.DEBUG, ...args);\n    }\n\n    info(...args){\n        return this.log(LEVEL.INFO, ...args);\n    }\n\n    warn(...args){\n        return this.log(LEVEL.WARN, ...args);\n    }\n\n    error(...args){\n        return this.log(LEVEL.ERROR, ...args);\n    }\n};\n\nclass Log {\n    constructor(opts){\n        Object.assign(this, opts);\n\n        this.time = new Date;\n    }\n}\n\nfunction create(conf){\n    return new Logger(conf);\n}\n\nfunction logPrefix(log){\n    return `[${log.module}]:[${createTimeString(log.time)}]:[${log.level}] - `;\n}\n\nfunction createTimeString(){\n    let time = new Date;\n\n    // YY-MM-DD HH:mm:ss.SSS\n    // 17-10-30 15:35:22:123\n    return `${(time.getFullYear() + '').slice(2)}-${time.getMonth()+1}-${time.getDate()} ` +\n        `${time.getHours()}:${time.getMinutes()}:${time.getSeconds()}:${time.getMilliseconds()}`;\n}\n\nexport default function logger(module, options = {}){\n    const { label } = options;\n\n    return create({\n        module,\n        label,\n    });\n}\n\nlogger.sn = sn;\nlogger.create = create;\n\nObject.defineProperties(logger, {\n    conf: {\n        get(){\n            return this[SYMBOL_CONF] || CONF;\n        },\n\n        set(newConf){\n            this[SYMBOL_CONF] = Object.assign({}, this[SYMBOL_CONF], newConf);\n        },\n    },\n\n    filter: {\n        get(){\n            return this[SYMBOL_FILTER] || function(){\n                // always pass by default\n                return true;\n            };\n        },\n\n        set(filter){\n            let f = filter;\n\n            if(Array.isArray(filter)){\n                f = function(inst){\n                    const matches = (inst.label || []).filter((label)=>{\n                        return filter.indexOf(label) > -1;\n                    });\n\n                    return matches.length > 0;\n                }\n            }\n\n            this[SYMBOL_FILTER] = f;\n        }\n    },\n\n    LEVEL: {\n        get(){\n            return LEVEL;\n        }\n    },\n\n    DEF_CONF: {\n        get(){\n            return DEF_CONF;\n        }\n    },\n});\n\n// export logger to global\n(global || window || {}).logger = logger;"]}