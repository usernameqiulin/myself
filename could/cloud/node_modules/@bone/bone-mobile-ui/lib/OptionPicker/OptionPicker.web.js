/**
 * @BoneUI BoneOptionPicker
 * @desciption
 * @aliplus.com
 */

/* 
<BoneOptionPicker
style={{}}
groups={
    [{
        key: 'hour',
        source: ["21", "22", "23", "01", "02", "03", "04", "05", "06", "07"],
        idx: 0,
        unit: '时'
    },
    {
        key: 'min',
        source: ["0", "1", "2"],
        idx: 0,
        unit: '分'
    }]
}
onValueChange={(idxs)=>{
    console.log(idxs); // {"hour": 0, "min": 1}
    console.log(JSON.stringify(idxs));
}}
/> */
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNative2 = _interopRequireDefault(_reactNative);

var _immutable = require('immutable');

var _immutable2 = _interopRequireDefault(_immutable);

var _Picker = require('./lib/Picker.js');

var _Picker2 = _interopRequireDefault(_Picker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var windowSize = _reactNative.Dimensions.get('window');

var BoneOptionPicker = function (_Component) {
    _inherits(BoneOptionPicker, _Component);

    function BoneOptionPicker(props) {
        _classCallCheck(this, BoneOptionPicker);

        return _possibleConstructorReturn(this, (BoneOptionPicker.__proto__ || Object.getPrototypeOf(BoneOptionPicker)).call(this, props));
    }

    _createClass(BoneOptionPicker, [{
        key: 'componentWillReceiveProps',
        value: function componentWillReceiveProps(nextProps) {}
    }, {
        key: 'shouldComponentUpdate',
        value: function shouldComponentUpdate() {
            return false;
        }
    }, {
        key: 'onValueChange',
        value: function onValueChange(data) {
            this.props.onValueChange && this.props.onValueChange(data);
        }
    }, {
        key: 'render',
        value: function render() {

            return _react2.default.createElement(_Picker2.default, {
                ref: 'boneOptonPicker',
                style: [styles.container, this.props.style],
                groups: this.props.groups,
                shown: true,
                onValueChange: this.onValueChange.bind(this)
            });
        }
    }]);

    return BoneOptionPicker;
}(_react.Component);

BoneOptionPicker.propTypes = {
    style: _reactNative.View.propTypes.style,
    groups: _react2.default.PropTypes.array,
    onValueChange: _react2.default.PropTypes.func
};
exports.default = BoneOptionPicker;

var styles = _reactNative.StyleSheet.create({
    container: {
        width: windowSize.width,
        height: 160,
        backgroundColor: '#ffffff'
    }
});