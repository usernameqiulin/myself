{"version":3,"sources":["../src/index.js"],"names":["eventSymbol","Symbol","listeners","evtName","isString","getType","listenerCount","length","on","callback","isFunction","queue","push","off","idx","indexOf","splice","emit","slice","args","i","len","apply","one","oneCallback"],"mappings":"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","file":"index.js","sourcesContent":["import { Type } from './Type';\nimport invariant from 'invariant';\n\nconst eventSymbol = Symbol('event-emitter');\n\n/**\n * Get listeners\n * @param {String} evtName \n * @returns {[Function]} listeners\n */\nfunction listeners(evtName){\n  invariant(Type.isString(evtName), `Unexpected type ${Type.getType(evtName)}, 'evtName' should be string`);\n  return this[eventSymbol] && this[eventSymbol][evtName] ? this[eventSymbol][evtName] : [];\n}\n\n/**\n * Get count of listeners\n * @param {String} evtName\n * @return {Number} listeners count \n */\nfunction listenerCount(evtName){\n  invariant(Type.isString(evtName), `Unexpected type ${Type.getType(evtName)}, 'evtName' should be string`);\n  return this.listeners(evtName).length;\n}\n\n/**\n * Add listener\n * @param {String} evtName \n * @param {Function} callback \n * @chainable\n */\nfunction on(evtName, callback){\n  invariant(Type.isString(evtName), `Unexpected type ${Type.getType(evtName)}, 'evtName' should be string`);\n  invariant(Type.isFunction(callback), `Unexpected type ${Type.getType(callback)}, 'callback' should be function`);\n\n  if(!this[eventSymbol]){\n    this[eventSymbol] = {};\n  }\n  \n  const queue = this.listeners(evtName);\n  queue.push(callback);\n  this[eventSymbol][evtName] = queue;\n  return this;\n}\n\n/**\n * Remove listener\n * @param {String} evtName \n * @param {Function} callback \n * @chainable\n */\nfunction off(evtName, callback){\n  invariant(Type.isString(evtName), `Unexpected type ${Type.getType(evtName)}, 'evtName' should be string`);\n\n  // no listener\n  if( this.listenerCount(evtName) === 0 ){\n    return this;\n  }\n\n  // remove all when callback is undefined\n  if( !callback ){\n    this[eventSymbol][evtName] = [];\n    return this;\n  }\n\n  // search and remove the specific callback\n  const queue = this.listeners(evtName);\n  const idx = queue.indexOf(callback);\n  if( idx > -1 ){\n    queue.splice(idx, 1);\n  }\n\n  return this;\n}\n\n/**\n * Emit listener\n * @param {String} evtName \n * @param {*} args \n * @return {Boolean} if one listener return false, event dispatch will break and return false\n */\nfunction emit(evtName, ...args) {\n  invariant(Type.isString(evtName), `Unexpected type ${Type.getType(evtName)}, 'evtName' should be string`); \n\n  // no listener exist\n  if (this.listenerCount(evtName) === 0) {\n    return;\n  }\n\n  // clone queue\n  // the original queue may change during the emitting\n  // e.g. \n  //  target.one(evt, callback1);\n  //  target.on(evt, callback2);\n  //  target.emit(evt) // may lead to error\n  const queue = this.listeners(evtName).slice(0);\n  for (let i=0, len=queue.length; i<len; i++) {\n    if (queue[i].apply(this, args) === false) {\n      return false;\n    }\n  }\n}\n\n/**\n * Add listener, which only runs once\n * @param {String} evtName \n * @param {Function} callback \n */\nfunction one(evtName, callback){\n  invariant(Type.isString(evtName), `Unexpected type ${Type.getType(evtName)}, 'evtName' should be string`);\n  invariant(Type.isFunction(callback), `Unexpected type ${Type.getType(callback)}, 'callback' should be function`);\n\n  // callback wrap with auto off code\n  const oneCallback = (...args)=>{\n    callback.apply(this, args);\n\n    this.off(evtName, oneCallback);\n  };\n\n  return this.on(evtName, oneCallback);\n}\n\nexport default {\n  on,\n  one,\n  off,\n  emit,\n  listeners,\n  listenerCount\n};\n"]}