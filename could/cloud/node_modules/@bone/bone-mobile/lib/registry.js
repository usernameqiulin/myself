'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = registry;

var _reactNative = require('react-native');

var _reactNative2 = _interopRequireDefault(_reactNative);

var _qs = require('qs');

var _qs2 = _interopRequireDefault(_qs);

var _entry = require('./entry');

var _entry2 = _interopRequireDefault(_entry);

var _globals = require('./globals');

var _domready = require('./util/domready');

var _domready2 = _interopRequireDefault(_domready);

var _constants = require('./config/constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function registry(appName, AppContainer, params) {
  // reigster component
  _reactNative.AppRegistry.registerComponent(appName, function () {
    return AppContainer;
  });

  // run app

  // use react-native-web
  if (_globals.isWeb) {
    // web app can't be started until dom ready
    var ready = (0, _domready2.default)();
    ready(function () {
      // get element on dom ready
      // otherwise get null rootElm
      var rootElm = document.getElementById(_constants.rootTag);

      _entry2.default.initialProps = params;

      /**
       * bundle入口查询参数
       * @namespace
       * @memberOf Bone
       */
      var query = _qs2.default.parse(location.search.replace(/^\?/, ''));

      _entry2.default.query = query;

      // run app
      _reactNative.AppRegistry.runApplication(appName, {
        rootTag: rootElm,

        // this is initial props for AppContainer
        initialProps: params
      });
    });

    return;
  }

  // use react-native
  // AppRegistry.runApplication is invoked by native code
  var _run = _reactNative.AppRegistry.runApplication;
  _reactNative.AppRegistry.runApplication = function (moduleName, appParams) {
    // correct source code url with biz package url, passed in appParams
    setSourceCodeUrl(appParams.initialProps.url);

    // native provides info in initial props
    var initialProps = _extends({}, appParams.initialProps);
    _entry2.default.initialProps = initialProps;

    // initialize Bone.query
    _entry2.default.query = initialProps.params || {};

    _entry2.default.config = initialProps.config || {};

    // modify moduleName to app.appName
    moduleName = appName;

    // merge params from app config to initial props
    _run(moduleName, {
      rootTag: appParams.rootTag,
      bundleUrl: '',
      initialProps: _extends({}, initialProps, params)
    });
  };
}

function setSourceCodeUrl(bizUrl) {
  if (!bizUrl) {
    return;
  }

  // assets支持离线包
  var NativeModules = _reactNative2.default.NativeModules;
  NativeModules.SourceCode.scriptURL = bizUrl;
}